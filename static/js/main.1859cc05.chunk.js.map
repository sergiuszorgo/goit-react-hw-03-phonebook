{"version":3,"sources":["components/SearchForm/SearchForm.module.css","components/ContactList/ContactList.module.css","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/SearchForm/SearchForm.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactList","contacts","deleteContact","className","s","ContactBox","length","map","id","name","number","ContactListItem","ContactListName","contBtn","onClick","ContactForm","state","inputChange","e","currentTarget","value","setState","resetForm","pushContact","preventDefault","props","addContact","formList","type","this","onChange","formBtn","Component","SearchForm","filter","inputForm","searchForm","htmlFor","App","checkContact","some","contact","toLowerCase","nanoid","alert","contactId","prevState","renderContacts","lowerName","includes","changeFilter","localStorage","getItem","parsContacts","JSON","parse","setItem","stringify","rendered","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1859cc05.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm\":\"SearchForm_searchForm__2Bqq-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactBox\":\"ContactList_ContactBox__3qzPv\",\"ContactList\":\"ContactList_ContactList__3avE9\",\"ContactListItem\":\"ContactList_ContactListItem__2HtlS\",\"ContactListName\":\"ContactList_ContactListName__25QxF\",\"contBtn\":\"ContactList_contBtn__1Nqd8\"};","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => (\r\n  <div className={s.ContactBox}>\r\n    <h2>Contacts: {contacts.length}</h2>\r\n    <ul className={s.ContactList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.ContactListItem}>\r\n          <p className={s.ContactListName}>\r\n            {name}: {number}\r\n          </p>\r\n          <button className={s.contBtn} onClick={() => deleteContact(id)}>\r\n            —\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  contacts: propTypes.array.isRequired,\r\n  deleteContact: propTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  // добавление значений в state\r\n  inputChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  //   очистка формы\r\n  resetForm = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  // отправка контакта\r\n  pushContact = (e) => {\r\n    e.preventDefault();\r\n    this.props.addContact(this.state);\r\n    this.resetForm();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.formList}>\r\n        <label>\r\n          Name:\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.inputChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number:\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.inputChange}\r\n          />\r\n        </label>\r\n        <button className={s.formBtn} onClick={this.pushContact}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n  addContact: propTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport s from \"./SearchForm.module.css\";\r\n\r\nconst SearchForm = ({ filter, inputForm }) => {\r\n  return (\r\n    <div className={s.searchForm}>\r\n      <label htmlFor=\"\">\r\n        Find contact by name{\" \"}\r\n        <input type=\"text\" name=\"filter\" value={filter} onChange={inputForm} />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n\r\nSearchForm.propTypes = {\r\n  filter: propTypes.string.isRequired,\r\n  inputForm: propTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { nanoid } from \"nanoid\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport SearchForm from \"./components/SearchForm/SearchForm\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n  // построение из localStorage\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    if (contacts) {\n      const parsContacts = JSON.parse(contacts);\n      this.setState({ contacts: parsContacts });\n    } else {\n      return;\n    }\n  }\n  //\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n  // проверка на совпадение\n  checkContact = (name) => {\n    return this.state.contacts.some(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n  };\n\n  // добавление контакта\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    if (this.checkContact(name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  };\n\n  // удаление контакта\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  // рендер списка\n  renderContacts = () => {\n    const lowerName = this.state.filter.toLowerCase();\n    return this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(lowerName)\n    );\n  };\n\n  // фильтр\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  render() {\n    const rendered = this.renderContacts();\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm addContact={this.addContact} />\n        <SearchForm filter={this.state.filter} inputForm={this.changeFilter} />\n        <ContactList contacts={rendered} deleteContact={this.deleteContact} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formList\":\"ContactForm_formList__gwuTm\",\"formBtn\":\"ContactForm_formBtn__2EkwQ\"};"],"sourceRoot":""}